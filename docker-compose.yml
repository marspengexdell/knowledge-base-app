services:

  nginx:
    image: nginx:1.25.4-alpine
    container_name: knowledge-base-app-nginx
    restart: unless-stopped
    ports:
      - "80:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf:ro
      - ./data/certbot/conf:/etc/letsencrypt:ro
      - ./data/certbot/www:/var/www/certbot:ro
    networks:
      - app-network
    depends_on:
      - backend
      - frontend-user
      - frontend-admin

  backend:
    build:
      context: .
      dockerfile: modules/backend/Dockerfile
    container_name: knowledge-base-app-backend
    env_file: ./modules/backend/.env
    volumes:
      - ./modules/backend/app:/app
      - ./models:/models
      - ./knowledge_base_docs:/knowledge_base_docs
    ports:
      - "8000:8000"
    networks:
      - app-network
    restart: always
    environment:
      - GRPC_SERVER=inference:50051     # ⭐️注意这里，所有后端gRPC请求会连到这个
      - VECTOR_DB_URL=http://chromadb:8000
    depends_on:
      - chromadb
      - inference

  inference:
    build:
      context: .
      dockerfile: modules/inference/Dockerfile
    container_name: knowledge-base-app-inference
    restart: unless-stopped
    volumes:
      - ./models:/models:ro
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: all
              capabilities: [gpu]
    shm_size: '2gb'
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "grpc_health_probe", "-addr=:50051"]
      interval: 30s
      timeout: 10s
      retries: 5

  frontend-user:
    build:
      context: ./frontend-user
    container_name: knowledge-base-app-frontend-user
    restart: unless-stopped
    networks:
      - app-network

  frontend-admin:
    build:
      context: ./frontend-admin
    container_name: knowledge-base-app-frontend-admin
    restart: unless-stopped
    networks:
      - app-network

  chromadb:
    image: chromadb/chroma:0.4.24
    container_name: knowledge-base-app-chromadb
    ports:
      - "8001:8000"
    volumes:
      - ./data/chroma:/chroma/chroma
    networks:
      - app-network
    restart: on-failure:0

networks:
  app-network:
    driver: bridge
