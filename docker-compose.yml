services:

  # Nginx: 统一的流量入口和反向代理
  nginx:
    image: nginx:1.25.4-alpine
    container_name: knowledge-base-app-nginx
    restart: unless-stopped
    ports:
      - "80:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf:ro
    networks:
      - app-network
    depends_on:
      - backend
      - frontend-user
      - frontend-admin

  # 后端服务: 处理业务逻辑和API
  backend:
    build:
      context: ./modules/backend
    container_name: knowledge-base-app-backend
    restart: unless-stopped
    volumes:
      # 统一的持久化存储路径
      - ./model_storage:/app/model_storage
      - ./document_storage:/app/document_storage
    environment:
      - GRPC_SERVER_ADDRESS=inference:50051
      - VECTOR_DB_URL=http://vector-db:8000
    depends_on:
      vector-db:
        condition: service_started
      inference:
        condition: service_started
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/docs"]
      interval: 30s
      timeout: 10s
      retries: 5

  # 推理服务: 运行AI模型
  inference:
    build:
      context: ./modules/inference
    container_name: knowledge-base-app-inference
    restart: unless-stopped
    volumes:
      # 核心修正：推理服务从与后端相同的模型存储目录中读取模型
      # 主机路径:容器内路径。容器内的 /app/models 是推理服务代码期望的路径。
      - ./model_storage:/app/models:ro
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: all
              capabilities: [gpu]
    shm_size: '2gb'
    networks:
      - app-network

  # 用户前端
  frontend-user:
    build:
      context: ./frontend-user
    container_name: knowledge-base-app-frontend-user
    restart: unless-stopped
    networks:
      - app-network

  # 管理员前端
  frontend-admin:
    build:
      context: ./frontend-admin
    container_name: knowledge-base-app-frontend-admin
    restart: unless-stopped
    networks:
      - app-network

  # 向量数据库
  vector-db:
    image: ghcr.io/chroma-core/chroma:latest
    container_name: knowledge-base-app-vector-db
    restart: unless-stopped
    ports:
      - "8001:8000"
    volumes:
      - chroma-data:/chroma
    networks:
      - app-network

# 定义全局网络
networks:
  app-network:
    driver: bridge

# 定义持久化数据卷
volumes:
  chroma-data:
