services:
  backend:
    build:
      context: ./modules/backend
      dockerfile: Dockerfile
    volumes:
      - ./modules/backend/app:/app/app
      - ./models:/models:ro
      - ./knowledge_base_docs:/app/app/knowledge_base_docs
    environment:
      - GRPC_SERVER_ADDRESS=inference:50051
      - VECTOR_DB_HOST=vector-db
      - VECTOR_DB_PORT=8000
    depends_on:
      inference:
        condition: service_healthy
      vector-db:
        condition: service_started
    networks:
      - app-network

  frontend-user:
    build:
      context: ./frontend-user
      dockerfile: Dockerfile
    depends_on:
      - backend
    networks:
      - app-network

  frontend-admin:
    build:
      context: ./frontend-admin
      dockerfile: Dockerfile
    volumes:
      - ./frontend-admin:/app
    depends_on:
      - backend
    networks:
      - app-network

  inference:
    build:
      context: ./modules/inference
      dockerfile: Dockerfile
    volumes:
      - ./models:/models:rw
    environment:
      - NVIDIA_VISIBLE_DEVICES=all
      - NVIDIA_DRIVER_CAPABILITIES=all
      - GGML_CUDA=1
      - ENABLE_CACHE=1
    gpus: all
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: all
              capabilities: [gpu]
    shm_size: '2gb'
    healthcheck:
      test: ["CMD", "nvidia-smi"]
      interval: 1m
      timeout: 10s
      retries: 3
    networks:
      - app-network

  vector-db:
    image: ghcr.io/chroma-core/chroma:latest
    ports:
      - "8001:8000"
    volumes:
      - chroma-data:/data
    networks:
      - app-network

  nginx:
    image: nginx:1.25.4-alpine
    container_name: knowledge-base-app-nginx-1
    restart: always
    ports:
      - "80:80"  # 只保留 80 端口
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf
      - ./data/certbot/www:/var/www/certbot
    networks:
      - app-network
    # depends_on 部分可以暂时注释掉，加快启动速度

  certbot:
    image: certbot/certbot
    volumes:
      - certbot-etc:/etc/letsencrypt
      - certbot-web:/var/www/certbot
    entrypoint: >-
      sh -c 'trap exit TERM; while :; do sleep 12h & wait $${!}; certbot renew; done'

volumes:
  chroma-data:
  certbot-etc:
  certbot-web:

networks:
  app-network:
    driver: bridge
